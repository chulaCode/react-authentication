{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\ReactJs\\\\Aunthentication-project\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLogedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nconst calculateRemainingTime = timeofExpiration => {\n  const currentTime = new Date().getTime();\n  const expirationTime = new Date(timeofExpiration).getTime;\n  const remainingTime = expirationTime - currentTime;\n  return remainingTime;\n};\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedTokenExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedTokenExpirationDate);\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\nexport const AuthContextProvider = props => {\n  _s();\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n  const [token, setToken] = useState(initialToken);\n\n  //!! token the !! converts a string to a boolearn true or false value\n  const userIsLogedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n  useEffect(() => {\n    if (tokenData) {\n      loginTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLogedIn: userIsLogedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 11\n  }, this);\n};\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLogedIn","login","logout","calculateRemainingTime","timeofExpiration","currentTime","Date","getTime","expirationTime","remainingTime","retrieveStoredToken","storedToken","localStorage","getItem","storedTokenExpirationDate","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLogedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","loginTimer","contextValue","children"],"sources":["C:/Users/User/Documents/ReactJs/Aunthentication-project/src/store/auth-context.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\nconst AuthContext=React.createContext({\r\n   token: '',\r\n   isLogedIn: false,\r\n   login: (token) => {},\r\n   logout: () => {}\r\n\r\n})\r\nconst calculateRemainingTime=(timeofExpiration) => \r\n{ \r\n    const currentTime = new Date().getTime();\r\n    const expirationTime = new Date(timeofExpiration).getTime\r\n    const remainingTime = expirationTime - currentTime;\r\n    return remainingTime\r\n}\r\nconst retrieveStoredToken = () =>{\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedTokenExpirationDate = localStorage.getItem('expirationTime');\r\n    \r\n    const remainingTime=calculateRemainingTime(storedTokenExpirationDate)\r\n    \r\n    if(remainingTime<=3600){\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n       \r\n        return null;\r\n    }\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime,\r\n\r\n    }    \r\n}\r\n\r\nexport const AuthContextProvider=(props)=>{\r\n    const tokenData=retrieveStoredToken();\r\n    let initialToken;\r\n\r\n    if(tokenData){\r\n        initialToken=tokenData.token;\r\n    }\r\n    const [token, setToken]=useState(initialToken);\r\n\r\n    //!! token the !! converts a string to a boolearn true or false value\r\n    const userIsLogedIn=!!token;\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        if(logoutTimer){\r\n            clearTimeout(logoutTimer);\r\n\r\n        }\r\n        \r\n    }, [])\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('expirationTime',expirationTime)\r\n\r\n        const remainingTime = calculateRemainingTime(expirationTime);\r\n        \r\n       logoutTimer=setTimeout(logoutHandler,remainingTime);\r\n    }\r\n    useEffect(() => {\r\n        if(tokenData){\r\n            loginTimer=setTimeout(logoutHandler, tokenData.duration)\r\n\r\n        }\r\n    }, [tokenData, logoutHandler]);\r\n\r\n    const contextValue={\r\n        token:token,\r\n        isLogedIn:userIsLogedIn,\r\n        login:loginHandler,\r\n        logout:logoutHandler\r\n    }\r\n\r\n    return<AuthContext.Provider value={contextValue}>\r\n          {props.children}\r\n        </AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContext;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}